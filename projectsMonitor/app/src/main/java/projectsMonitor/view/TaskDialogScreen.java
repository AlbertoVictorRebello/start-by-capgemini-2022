/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package projectsMonitor.view;

import java.awt.Color;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import projectsMonitor.controller.TaskController;
import projectsMonitor.model.Project;
import projectsMonitor.model.Task;

/**
 *
 * @author albertovictorrebello
 */
public class TaskDialogScreen extends javax.swing.JDialog {

    TaskController controller;
    Project project;
    Task taskToUpdate;
    boolean updateMode;
    
    public TaskDialogScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);         
        initComponents();
        controller = new TaskController();        
        
        scaleImage(lblTaskIcon,"/mnt/dados/alber/Documents/PROJETOS DE COMPUTACAO/Start By Capgemini/projectsMonitor/app/src/main/resources/whiteChecked.png");
        
    }
    
    public final void scaleImage(JLabel label, String imgPath) {
        ImageIcon icon = new ImageIcon(imgPath);
        Image img = icon.getImage();
        Image imgScaled = img.getScaledInstance(label.getHeight() - 5, label.getHeight() - 5,Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(imgScaled);
        label.setIcon(scaledIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTask = new javax.swing.JPanel();
        lblTask = new javax.swing.JLabel();
        lblTaskIcon = new javax.swing.JLabel();
        pnlTaskInfo = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        lblDeadline = new javax.swing.JLabel();
        lblNotes = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        spnDescription = new javax.swing.JScrollPane();
        txaDescription = new javax.swing.JTextArea();
        spnNotes = new javax.swing.JScrollPane();
        txaNotes = new javax.swing.JTextArea();
        ftxDeadline = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 700));

        pnlTask.setBackground(new java.awt.Color(0, 153, 102));

        lblTask.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        lblTask.setForeground(java.awt.Color.white);
        lblTask.setText("Task");

        lblTaskIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTaskIconMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlTaskLayout = new javax.swing.GroupLayout(pnlTask);
        pnlTask.setLayout(pnlTaskLayout);
        pnlTaskLayout.setHorizontalGroup(
            pnlTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTask, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(lblTaskIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
        );
        pnlTaskLayout.setVerticalGroup(
            pnlTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaskLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTaskIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTask, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                .addContainerGap())
        );

        lblName.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        lblName.setText("Name");

        lblDescription.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        lblDescription.setText("Description");

        lblDeadline.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        lblDeadline.setText("Deadline");

        lblNotes.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        lblNotes.setText("Notes");

        txtName.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txaDescription.setColumns(20);
        txaDescription.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        txaDescription.setRows(5);
        spnDescription.setViewportView(txaDescription);

        txaNotes.setColumns(20);
        txaNotes.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        txaNotes.setRows(5);
        spnNotes.setViewportView(txaNotes);

        ftxDeadline.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        javax.swing.GroupLayout pnlTaskInfoLayout = new javax.swing.GroupLayout(pnlTaskInfo);
        pnlTaskInfo.setLayout(pnlTaskInfoLayout);
        pnlTaskInfoLayout.setHorizontalGroup(
            pnlTaskInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaskInfoLayout.createSequentialGroup()
                .addGroup(pnlTaskInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addComponent(lblDescription)
                    .addComponent(lblNotes)
                    .addComponent(lblDeadline))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlTaskInfoLayout.createSequentialGroup()
                .addGroup(pnlTaskInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ftxDeadline, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnNotes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnDescription))
                .addContainerGap())
        );
        pnlTaskInfoLayout.setVerticalGroup(
            pnlTaskInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaskInfoLayout.createSequentialGroup()
                .addComponent(lblName)
                .addGap(5, 5, 5)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spnDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDeadline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftxDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(lblNotes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spnNotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTaskInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTaskInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void lblTaskIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTaskIconMouseClicked
        // TODO add your handling code here:                    
            if (this.isUpdateMode()) {
                try {                            
                    if("".equals(txtName.getText())) {
                        lblName.setForeground(Color.red);
                        JOptionPane.showMessageDialog(rootPane, "A task name shall be informed.");                  
                        return;                
                    } else {
                        lblName.setForeground(Color.black);
                        taskToUpdate.setName(txtName.getText());                
                    }           
            
                    taskToUpdate.setDescription(txaDescription.getText()); 
                    taskToUpdate.setNotes(txaNotes.getText());

                    if("".equals(ftxDeadline.getText())) {
                        lblDeadline.setForeground(Color.red);
                        JOptionPane.showMessageDialog(rootPane, "A task deadline shall be informed.");                  
                        return;                
                    } else {
                        lblDeadline.setForeground(Color.black);
                        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                        Date deadline = null;
                        deadline = df.parse(ftxDeadline.getText());
                        taskToUpdate.setDeadline(deadline);                       
                    }
                    this.dispose();
                    controller.update(taskToUpdate);
                    JOptionPane.showMessageDialog(rootPane, "Task updated.");
                } catch(Exception e) {
                    JOptionPane.showMessageDialog(rootPane, e.getMessage());
                    this.dispose();
                }
            } else {
                try {
                    Task task = new Task();
        //            task.setProjectId(project.getId());
                    task.setProjectId(project.getId());
                    if("".equals(txtName.getText())) {
                        lblName.setForeground(Color.red);
                        JOptionPane.showMessageDialog(rootPane, "A task name shall be informed.");                  
                        return;                
                    } else {
                        lblName.setForeground(Color.black);
                        task.setName(txtName.getText());                
                    }            

                    task.setDescription(txaDescription.getText()); 
                    task.setNotes(txaNotes.getText());

                    if("".equals(ftxDeadline.getText())) {
                        lblDeadline.setForeground(Color.red);
                        JOptionPane.showMessageDialog(rootPane, "A task deadline shall be informed.");                  
                        return;                
                    } else {
                        lblDeadline.setForeground(Color.black);
                        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                        Date deadline = null;
                        deadline = df.parse(ftxDeadline.getText());
                        task.setDeadline(deadline);                       
                    }
                    this.dispose();
                        controller.save(task);
                        JOptionPane.showMessageDialog(rootPane, "Task saved.");
                }catch(Exception e) {
                    JOptionPane.showMessageDialog(rootPane, e.getMessage());
                    this.dispose();
                }
            }
        
        
        
    }//GEN-LAST:event_lblTaskIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskDialogScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskDialogScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskDialogScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskDialogScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TaskDialogScreen dialog = new TaskDialogScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField ftxDeadline;
    private javax.swing.JLabel lblDeadline;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNotes;
    private javax.swing.JLabel lblTask;
    private javax.swing.JLabel lblTaskIcon;
    private javax.swing.JPanel pnlTask;
    private javax.swing.JPanel pnlTaskInfo;
    private javax.swing.JScrollPane spnDescription;
    private javax.swing.JScrollPane spnNotes;
    private javax.swing.JTextArea txaDescription;
    private javax.swing.JTextArea txaNotes;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    public void setProject(Project project) {
        this.project = project;
    }

    public boolean isUpdateMode() {
        return updateMode;
    }

    public void setUpdateMode(boolean updateMode) {
        this.updateMode = updateMode;
        if (updateMode) {       
            txtName.setText(taskToUpdate.getName());
            txaDescription.setText(taskToUpdate.getDescription());
            txaNotes.setText(taskToUpdate.getNotes());
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");                
                
            ftxDeadline.setText(df.format(taskToUpdate.getDeadline()));           
        } 
        
    }

    public Task getTaskToUpdate() {
        return taskToUpdate;
    }

    public void setTaskToUpdate(Task taskToUpdate) {
        this.taskToUpdate = taskToUpdate;
    }
    
    

    
}
