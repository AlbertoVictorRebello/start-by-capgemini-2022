/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectsMonitor.view;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultListModel;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import projectsMonitor.controller.ProjectController;
import projectsMonitor.controller.TaskController;
import projectsMonitor.model.Project;
import projectsMonitor.model.Task;
import util.ButtonColumnCellRenderer;
import util.DeadlineColumnCellRenderer;
import static util.ScaleImage.scaleImage;
import util.TaskTableModel;


/**
 *
 * @author albertovictorrebello
 */
public class MainScreen extends javax.swing.JFrame {

    ProjectController projectController;
    TaskController taskController;
    DefaultListModel projectsModel;
    TaskTableModel tableModel;
    
    {
        projectController = new ProjectController();
        taskController = new TaskController();
        
        projectsModel = new DefaultListModel();        
        loadProjects();
        
        tableModel = new TaskTableModel();        
//        loadTasks(11);
    }
    
    public MainScreen() {
        initComponents();
        
        lstProjectsList.setModel(projectsModel);
        tblTasksTable.setModel(tableModel);
        if (!projectsModel.isEmpty()) {
            lstProjectsList.setSelectedIndex(0);
            Project project = (Project) projectsModel.get(0);
            loadTasks(project.getId());
        }
        decorateTasksTable();
        scaleImage(lblTitle,"/mnt/dados/alber/Documents/PROJETOS DE COMPUTACAO/Start By Capgemini/projectsMonitor/app/src/main/resources/checked.png");
        scaleImage(lblAddProject,"/mnt/dados/alber/Documents/PROJETOS DE COMPUTACAO/Start By Capgemini/projectsMonitor/app/src/main/resources/plus.png");
        scaleImage(lblAddTask,"/mnt/dados/alber/Documents/PROJETOS DE COMPUTACAO/Start By Capgemini/projectsMonitor/app/src/main/resources/plus.png");
        scaleImage(lblEmptyListIcon,"/mnt/dados/alber/Documents/PROJETOS DE COMPUTACAO/Start By Capgemini/projectsMonitor/app/src/main/resources/desktop-computer.png");
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spnTasksTable = new javax.swing.JScrollPane();
        tblTasksTable = new javax.swing.JTable();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblTheme = new javax.swing.JLabel();
        pnlProjects = new javax.swing.JPanel();
        lblProjects = new javax.swing.JLabel();
        lblAddProject = new javax.swing.JLabel();
        pnlTasks = new javax.swing.JPanel();
        lblTasks = new javax.swing.JLabel();
        lblAddTask = new javax.swing.JLabel();
        pnlProjectsList = new javax.swing.JPanel();
        spnProjectsList = new javax.swing.JScrollPane();
        lstProjectsList = new javax.swing.JList<>();
        pnlTasksList = new javax.swing.JPanel();
        pnlEmptyList = new javax.swing.JPanel();
        lblEmptyListIcon = new javax.swing.JLabel();
        lblEmptyList = new javax.swing.JLabel();
        lblEmptyListInstruction = new javax.swing.JLabel();

        tblTasksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Description", "Deadline", "Completed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTasksTable.setGridColor(java.awt.Color.white);
        tblTasksTable.setRowHeight(40);
        tblTasksTable.setSelectionBackground(new java.awt.Color(204, 255, 204));
        tblTasksTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblTasksTable.setShowHorizontalLines(true);
        tblTasksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTasksTableMouseClicked(evt);
            }
        });
        spnTasksTable.setViewportView(tblTasksTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(null);
        setMinimumSize(null);
        setPreferredSize(new java.awt.Dimension(900, 750));
        setResizable(false);

        pnlTitle.setBackground(new java.awt.Color(0, 153, 102));

        lblTitle.setFont(new java.awt.Font("DejaVu Sans", 0, 36)); // NOI18N
        lblTitle.setForeground(java.awt.Color.white);
        lblTitle.setText("Projects Monitor");

        lblTheme.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lblTheme.setForeground(java.awt.Color.white);
        lblTheme.setText("Write it, do not forget it!");

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTheme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(lblTheme)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlProjects.setBackground(java.awt.Color.white);
        pnlProjects.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblProjects.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        lblProjects.setForeground(new java.awt.Color(0, 153, 102));
        lblProjects.setText("  Protects");

        lblAddProject.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        lblAddProject.setForeground(new java.awt.Color(0, 153, 102));
        lblAddProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddProjectMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlProjectsLayout = new javax.swing.GroupLayout(pnlProjects);
        pnlProjects.setLayout(pnlProjectsLayout);
        pnlProjectsLayout.setHorizontalGroup(
            pnlProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectsLayout.createSequentialGroup()
                .addComponent(lblProjects, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(lblAddProject, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        pnlProjectsLayout.setVerticalGroup(
            pnlProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectsLayout.createSequentialGroup()
                .addGroup(pnlProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProjectsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblProjects, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlProjectsLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblAddProject, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pnlTasks.setBackground(java.awt.Color.white);
        pnlTasks.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTasks.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        lblTasks.setForeground(new java.awt.Color(0, 153, 102));
        lblTasks.setText("  Tasks");

        lblAddTask.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        lblAddTask.setForeground(new java.awt.Color(0, 153, 102));
        lblAddTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddTaskMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlTasksLayout = new javax.swing.GroupLayout(pnlTasks);
        pnlTasks.setLayout(pnlTasksLayout);
        pnlTasksLayout.setHorizontalGroup(
            pnlTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTasksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAddTask, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        pnlTasksLayout.setVerticalGroup(
            pnlTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTasksLayout.createSequentialGroup()
                .addGroup(pnlTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTasksLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblAddTask, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTasksLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlProjectsList.setBackground(java.awt.Color.white);
        pnlProjectsList.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lstProjectsList.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        lstProjectsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstProjectsList.setFixedCellHeight(50);
        lstProjectsList.setSelectionBackground(new java.awt.Color(0, 153, 102));
        lstProjectsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstProjectsListMouseClicked(evt);
            }
        });
        lstProjectsList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lstProjectsListKeyReleased(evt);
            }
        });
        spnProjectsList.setViewportView(lstProjectsList);

        javax.swing.GroupLayout pnlProjectsListLayout = new javax.swing.GroupLayout(pnlProjectsList);
        pnlProjectsList.setLayout(pnlProjectsListLayout);
        pnlProjectsListLayout.setHorizontalGroup(
            pnlProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectsListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spnProjectsList)
                .addContainerGap())
        );
        pnlProjectsListLayout.setVerticalGroup(
            pnlProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectsListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spnProjectsList)
                .addContainerGap())
        );

        pnlTasksList.setBackground(java.awt.Color.white);
        pnlTasksList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTasksList.setLayout(new java.awt.BorderLayout());

        pnlEmptyList.setBackground(java.awt.Color.white);

        lblEmptyList.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        lblEmptyList.setForeground(new java.awt.Color(0, 153, 102));
        lblEmptyList.setText("No tasks defined! :-D");

        lblEmptyListInstruction.setForeground(new java.awt.Color(124, 124, 124));
        lblEmptyListInstruction.setText("New task? Click on plus button.");

        javax.swing.GroupLayout pnlEmptyListLayout = new javax.swing.GroupLayout(pnlEmptyList);
        pnlEmptyList.setLayout(pnlEmptyListLayout);
        pnlEmptyListLayout.setHorizontalGroup(
            pnlEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEmptyListLayout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addGroup(pnlEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEmptyListLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(lblEmptyListIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEmptyListLayout.createSequentialGroup()
                        .addComponent(lblEmptyList)
                        .addGap(43, 43, 43))
                    .addComponent(lblEmptyListInstruction, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(101, 101, 101))
        );
        pnlEmptyListLayout.setVerticalGroup(
            pnlEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmptyListLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(lblEmptyListIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEmptyList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEmptyListInstruction)
                .addContainerGap(174, Short.MAX_VALUE))
        );

        pnlTasksList.add(pnlEmptyList, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTasksList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTasksList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblAddProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddProjectMouseClicked
        // TODO add your handling code here:
        ProjectDialogScreen projectDialogScreen = new ProjectDialogScreen(this, rootPaneCheckingEnabled);
        projectDialogScreen.setVisible(true);
        
        projectDialogScreen.addWindowListener(new WindowAdapter() {
           @Override
           public void windowClosed(WindowEvent we) {
               loadProjects();
           } 
        });
        
    }//GEN-LAST:event_lblAddProjectMouseClicked

    private void lblAddTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddTaskMouseClicked
        // TODO add your handling code here:
        TaskDialogScreen taskDialogScreen = new TaskDialogScreen(this, rootPaneCheckingEnabled);
              
        int projectIndex = lstProjectsList.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);
        taskDialogScreen.setProject(project);
        
        taskDialogScreen.addWindowListener(new WindowAdapter() {
           @Override
           public void windowClosed(WindowEvent we) {
               loadTasks(project.getId());
           } 
        });
        
        taskDialogScreen.setVisible(true); 
    }//GEN-LAST:event_lblAddTaskMouseClicked

    private void lstProjectsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstProjectsListMouseClicked
        // TODO add your handling code here:
        int projectIndex = lstProjectsList.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);
        loadTasks(project.getId());
    }//GEN-LAST:event_lstProjectsListMouseClicked

    private void tblTasksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTasksTableMouseClicked
        // TODO add your handling code here:
        int rowIndex = tblTasksTable.rowAtPoint(evt.getPoint());
        int columnIndex = tblTasksTable.columnAtPoint(evt.getPoint());
        Task task = tableModel.getTasks().get(rowIndex);
        
        switch(columnIndex) {
            case 3: 
                taskController.update(task);
                break;
            case 4:     
                TaskDialogScreen taskDialogScreen = new TaskDialogScreen(this, rootPaneCheckingEnabled);
              
                int projectIndex = task.getProjectId();
                Project project = (Project) projectsModel.get(projectIndex);
                taskDialogScreen.setProject(project);
                taskDialogScreen.setTaskToUpdate(task);
                taskDialogScreen.setUpdateMode(true);
                
                taskDialogScreen.addWindowListener(new WindowAdapter() {
                   @Override
                   public void windowClosed(WindowEvent we) {
                       loadTasks(project.getId());
                   } 
                });
                
                taskDialogScreen.setVisible(true);
                break;
            case 5:                
                try {
                    taskController.removeById(task.getProjectId(), task.getId());
                    JOptionPane.showMessageDialog(rootPane, "Task removed.");
                    loadTasks(task.getProjectId());
                    break;               
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "Task removing fail.");                    
                }           
        }
        decorateTasksTable();
    }//GEN-LAST:event_tblTasksTableMouseClicked

    private void lstProjectsListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lstProjectsListKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\u007f') {
            int projectIndex = lstProjectsList.getSelectedIndex();
            Project project = (Project) projectsModel.get(projectIndex);
            projectController.removeById(project.getId());
            loadProjects();
        }
    }//GEN-LAST:event_lstProjectsListKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });       
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblAddProject;
    private javax.swing.JLabel lblAddTask;
    private javax.swing.JLabel lblEmptyList;
    private javax.swing.JLabel lblEmptyListIcon;
    private javax.swing.JLabel lblEmptyListInstruction;
    private javax.swing.JLabel lblProjects;
    private javax.swing.JLabel lblTasks;
    private javax.swing.JLabel lblTheme;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> lstProjectsList;
    private javax.swing.JPanel pnlEmptyList;
    private javax.swing.JPanel pnlProjects;
    private javax.swing.JPanel pnlProjectsList;
    private javax.swing.JPanel pnlTasks;
    private javax.swing.JPanel pnlTasksList;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane spnProjectsList;
    private javax.swing.JScrollPane spnTasksTable;
    private javax.swing.JTable tblTasksTable;
    // End of variables declaration//GEN-END:variables

    public void decorateTasksTable() {
        // Customizing tasks table.
            tblTasksTable.getTableHeader().setFont(new Font("Deja Vue Sans", Font.BOLD,14));
            tblTasksTable.getTableHeader().setBackground(new Color(0, 153, 102));
            tblTasksTable.getTableHeader().setForeground(new Color(255, 255, 255));
            // Creating an automatic sorter for tasks table .
            tblTasksTable.setAutoCreateRowSorter(true);
            tblTasksTable.getColumnModel().getColumn(2).setCellRenderer(new DeadlineColumnCellRenderer());
            tblTasksTable.getColumnModel().getColumn(4).setCellRenderer(new ButtonColumnCellRenderer("pencil"));
            tblTasksTable.getColumnModel().getColumn(5).setCellRenderer(new ButtonColumnCellRenderer("clear"));
        }

    private void loadProjects() {        
        projectsModel.clear();
        projectsModel.addAll(projectController.getAll());
    }

    private void loadTasks(int projectId) {
        tableModel.setTasks(taskController.getAll(projectId));
        showTblTasksTable(tableModel.getRowCount() > 0);
    }

    private void showTblTasksTable(boolean hasTasks) {
        if (hasTasks) {
            if (pnlEmptyList.isVisible()) {
                pnlEmptyList.setVisible(false);
                pnlTasksList.remove(pnlEmptyList);       
            }
            
            pnlTasksList.add(spnTasksTable);
            spnTasksTable.setVisible(true);
            spnTasksTable.setSize(pnlTasksList.getWidth(), pnlTasksList.getHeight());            
            
        } else {
            if (spnTasksTable.isVisible()) {
                spnTasksTable.setVisible(false);
                pnlTasksList.remove(spnTasksTable);       
            }
            
            pnlTasksList.add(pnlEmptyList);
            pnlEmptyList.setVisible(true);
            pnlEmptyList.setSize(pnlTasksList.getWidth(), pnlTasksList.getHeight());
            
        }
    }
}
